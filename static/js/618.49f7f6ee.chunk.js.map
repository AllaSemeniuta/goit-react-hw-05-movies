{"version":3,"file":"static/js/618.49f7f6ee.chunk.js","mappings":"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","sources":["components/Box/Box.js","components/Title/Title.styled.js","components/Title/Title.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  typography,\n  shadow,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  typography,\n  shadow\n);\n","import styled from 'styled-components';\n\nexport const TitleStyled = styled.h2`\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.m};\n  margin-bottom: ${p => p.theme.space[3]};\n`;\n","import PropTypes from 'prop-types';\nimport { TitleStyled } from './Title.styled';\n\nconst Title = ({ children, as }) => {\n  return <TitleStyled as={as}>{children}</TitleStyled>;\n};\n\nexport default Title;\nTitle.defaultProps = {\n  as: 'h2',\n};\n\nTitle.propTypes = {\n  children: PropTypes.node,\n  as: PropTypes.string,\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Image = styled.img`\n  width: 280px;\n  border-radius: ${p => p.theme.radii.normal};\n  height: 400px;\n  object-fit: cover;\n  /* margin-bottom: ${p => p.theme.space[2]}; */\n`;\n\nexport const BackLinkText = styled.span`\n  margin-left: ${p => p.theme.space[3]};\n`;\n\nexport const BackLink = styled(NavLink)`\n  margin-bottom: ${p => p.theme.space[3]};\n  display: flex;\n  text-decoration: none;\n  cursor: pointer;\n  /* justify-content: center; */\n  align-items: center;\n`;\n\nexport const Text = styled.p`\n  font-size: ${p => p.theme.fontSizes.s};\n  margin-bottom: ${p => p.theme.space[3]};\n`;\n\nexport const AdditionalInfoLink = styled(NavLink)`\n  /* margin-top: ${p => p.theme.space[3]}; */\n  text-decoration: none;\n  border: ${p => p.theme.borders.normal};\n  padding: ${p => p.theme.space[2]};\n  border-radius: ${p => p.theme.radii.normal};\n\n  :not(:last-child) {\n    margin-right: ${p => p.theme.space[3]};\n  }\n\n  /* cursor: pointer; */\n`;\n","import { useState, useEffect } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport * as API from '../../services/moviesApi';\nimport defaultPoster from '../../images/defaultPoster.png';\nimport { Box } from 'components/Box/Box';\nimport Title from 'components/Title/Title';\nimport {\n  Image,\n  BackLinkText,\n  BackLink,\n  Text,\n  AdditionalInfoLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [movieDetails, setMovieDetails] = useState('');\n\n  // console.log('location', location);\n  // console.log(movieId);\n  const posterPath = 'https://image.tmdb.org/t/p/w500';\n\n  useEffect(() => {\n    if (movieId === null) return;\n\n    async function getMovieDetails(movieId) {\n      const response = await API.getMovieDetails(movieId);\n      // console.log(response);\n      setMovieDetails(response.data);\n    }\n\n    getMovieDetails(movieId);\n  }, [movieId]);\n\n  if (movieDetails === '') return null;\n\n  const { title, overview, genres, vote_average, release_date, poster_path } =\n    movieDetails;\n  const score = ((vote_average * 100) / 10).toFixed();\n  const year = release_date.slice(0, 4);\n  // console.log(genres);\n  const image = poster_path ? `${posterPath}${poster_path}` : defaultPoster;\n\n  return (\n    <Box as=\"main\" px={5} pb={5}>\n      <BackLink to={location.state?.from ?? '/'}>\n        <AiOutlineArrowLeft />\n        <BackLinkText> Go Back</BackLinkText>\n      </BackLink>\n      <Box as=\"section\" display=\"flex\" flexWrap=\"wrap\" gridGap={6} mb={5}>\n        <Image src={image} alt={title} />\n        <Box flexGrow=\"2\" maxWidth=\"600px\">\n          <Title as=\"h1\">\n            {title} {''}({year}){' '}\n          </Title>\n          <Text>User Score: {score}%</Text>\n          <Title as=\"h2\">Overview</Title>\n          <Text>{overview}</Text>\n          <Title as=\"h2\">Genres</Title>\n          <Text>\n            {' '}\n            {genres.map(({ name }) => (\n              <span key={name}> {name} </span>\n            ))}\n          </Text>{' '}\n        </Box>\n      </Box>\n      <Box as=\"section\">\n        <Title as=\"h3\" mb=\"20px\">\n          Additional information\n        </Title>\n        <Box mb={5} mt={3} p={3}>\n          <AdditionalInfoLink\n            to=\"cast\"\n            state={{ from: location.state?.from ?? '/' }}\n          >\n            Cast\n          </AdditionalInfoLink>\n          <AdditionalInfoLink\n            to=\"reviews\"\n            state={{ from: location.state?.from ?? '/' }}\n          >\n            Reviews{' '}\n          </AdditionalInfoLink>\n        </Box>\n      </Box>\n      <Outlet />\n    </Box>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'ae73804bd189becf74915bbee0851e24';\n\nconst obj = {\n  params: {\n    api_key: API_KEY,\n  },\n};\n\nexport const trendMoviesFetch = async () => {\n  const response = await axios.get('/trending/movie/week', obj);\n  // console.log(response.data);\n  return response.data;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}`, obj);\n  // console.log(response);\n  return response;\n};\n\nexport const getCastByID = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}/credits`, obj);\n  return response;\n};\n\nexport const getReviewsByID = async movie_id => {\n  const response = await axios.get(`/movie/${movie_id}/reviews`, obj);\n  return response;\n};\n\nexport const getSearchQueryMovies = async query => {\n  const paramsForQuery = { ...obj };\n  paramsForQuery.params.query = query;\n  const response = await axios.get(`/search/movie`, paramsForQuery);\n  return response;\n};\n\nexport * from './moviesApi';\n"],"names":["Box","styled","color","space","layout","flexbox","grid","background","border","position","typography","shadow","TitleStyled","p","theme","fontWeights","bold","fontSizes","m","Title","children","as","defaultProps","Image","radii","normal","BackLinkText","BackLink","NavLink","Text","s","AdditionalInfoLink","borders","movieId","useParams","location","useLocation","useState","movieDetails","setMovieDetails","useEffect","API","response","data","getMovieDetails","title","overview","genres","vote_average","release_date","poster_path","score","toFixed","year","slice","image","defaultPoster","px","pb","to","state","from","display","flexWrap","gridGap","mb","src","alt","flexGrow","maxWidth","map","name","mt","axios","obj","params","api_key","trendMoviesFetch","movie_id","getCastByID","getReviewsByID","getSearchQueryMovies","query","paramsForQuery"],"sourceRoot":""}